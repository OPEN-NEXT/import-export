version: "3.8"
services: 

  backend: 
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@postgres-db/postgres
      - POSTGRES_DSN=postgresql://postgres:postgres@postgres-db/dido
      - POSTGRES_TEST_DSN=postgresql://postgres:postgres@postgres-db/dido_test
      - WIKIFACTORY_CONNECTION_URL=http://frontend:8080/api/graphql
      - WIKIFACTORY_TEST_USER_NAME=testuser3
      - BROKER_URL=redis://redis_dido:6379/0
      - BACKEND_URL=redis://redis_dido:6379/0
    ports: 
      - "8000:8000"
    volumes:
      - ./app:/app/app
    depends_on: 
      - "redis_dido"
      - "postgres-db"
    networks:
      - alpha_wikifactory-development

  redis_dido: 
    image: "redis:alpine"
    ports:
      - "8002:6379"
    networks:
      - alpha_wikifactory-development

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.celery_entrypoint worker --loglevel=info
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@postgres-db/postgres
      - POSTGRES_DSN=postgresql://postgres:postgres@postgres-db/dido
      - POSTGRES_TEST_DSN=postgresql://postgres:postgres@postgres-db/dido_test
      - WIKIFACTORY_CONNECTION_URL=http://frontend:8080/api/graphql
      - WIKIFACTORY_TEST_USER_NAME=testuser3
      - BROKER_URL=redis://redis_dido:6379/0
      - BACKEND_URL=redis://redis_dido:6379/0

    depends_on: 
      - "redis_dido"
      - "postgres-db"
    ports:
      - "8003:8000"
    networks:
      - alpha_wikifactory-development

  postgres-db:
    image: "postgres"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - database-data:/var/lib/postgresql/data # To persist content
    ports:
      - "8004:5432"
    command: ["postgres", "-c", "log_statement=all"]
    networks:
      - alpha_wikifactory-development

networks:
  alpha_wikifactory-development:
    external: true


volumes:
  database-data:



