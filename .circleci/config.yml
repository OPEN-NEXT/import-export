version: 2.1


orbs:
  docker: circleci/docker@1.5.0

jobs:
  build:

    docker:
      - image: "circleci/python:3.7"
        environment:
          PIPENV_VENV_IN_PROJECT: true
      - image: circleci/postgres
        command: postgres -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off'
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgtres
      - image: circleci/redis
    resource_class: small
    environment:
      SERVER_NAME: localhost
      SERVER_HOST: http://localhost
      PROJECT_NAME: import-export
      BACKEND_CORS_ORIGINS: "[\"http://localhost:8000\"]"
      POSTGRES_SERVER: localhost
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PYTEST_POSTGRES_SERVER: localhost
      PYTEST_POSTGRES_USER: postgres
      PYTEST_POSTGRES_PASSWORD: postgres
      PYTEST_POSTGRES_DB: test
      DOWNLOAD_BASE_PATH: /tmp
      BROKER_URL: redis://redis:6379/0
      DOCKER_IMAGE_BACKEND: ${DOCKER_REGISTRY}/${CIRCLE_PROJECT_REPONAME}/backend
      DOCKER_IMAGE_CELERYWORKER: ${DOCKER_REGISTRY}/${CIRCLE_PROJECT_REPONAME}/celeryworker

    working_directory: ~/import-export

    steps:

      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - restore_cache:
          name: restore pipenv cache
          key: venv-python-3.7-{{ checksum "Pipfile.lock" }}

      - run:
          name: pipenv
          command: |
            sudo pip install pipenv
            pipenv install --dev
          when: always

      - save_cache:
          name: save pipenv cache
          key: venv-python-3.7-{{ checksum "Pipfile.lock" }}
          paths:
            - .venv

      - restore_cache:
          name: restore pre-commit cache
          key: pre-commit-{{ checksum ".pre-commit-config.yaml" }}

      - run:
          name: pre-commit checks
          command: |
            pipenv run pre-commit install
            pipenv run pre-commit run --all --show-diff-on-failure
          when: always

      - save_cache:
          name: save pre-commit cache
          key: pre-commit-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit

      - run:
          name: unit-tests
          command: |
            rm -f ~/.gitconfig
            rm -f .env
            mkdir test-results
            pipenv run pytest --junitxml=test-results/junit.xml
          when: always  # run even if there is a flake8 error

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

      - docker/check:
          docker-username: CIRCLE_PROJECT_USERNAME
          docker-password: GITHUB_TOKEN
          registry: docker.pkg.github.com
          use-docker-credentials-store: true

      - run:
          name: Trim branch name for tagging
          command: |
            echo 'export TRIM_BRANCH=`echo $CIRCLE_BRANCH | sed -r 's,/,-,g'`' >> $BASH_ENV

      - run:
          name: Build using docker-compose
          environment:
            TAG: ${TRIM_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1:0:7},${TRIM_BRANCH}
          command: |
            docker-compose -f docker-compose.yaml build

      - run:
          name: Push using docker-compose
          environment:
            TAG: ${TRIM_BRANCH}.${CIRCLE_BUILD_NUM}.${CIRCLE_SHA1:0:7},${TRIM_BRANCH}
          command: |
            docker-compose -f docker-compose.yaml push
